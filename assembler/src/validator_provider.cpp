#include "validator_provider.h"

std::map<std::string,validator*> validators_provider::validators = {
    {"adds",new reg_reg_reg()},
    {"muls",new reg_reg_reg()},
    {"divs",new reg_reg_reg()},
    {"subs",new reg_reg_reg()},
    {"enter",new no_op()},
    {"leave",new no_op()},
    {"jmpl",new jmpl_v()},
    {"jmpr",new jmpr_v()},
    {"jmplr",new jmplr_v()},
    {"call",new jmpl_v()},
    {"ret",new no_op()},
    {"fadd",new no_op()},
    {"fdiv",new no_op()},
    {"fmul",new no_op()},
    {"fsub",new no_op()},
    {"addws",new mathw_v()},
    {"mulws",new mathw_v()},
    {"divws",new mathw_v()},
    {"subws",new mathw_v()},
    {"addw",new mathw_v()},
    {"mulw",new mathw_v()},
    {"divw",new mathw_v()},
    {"subw",new mathw_v()},
    {"mov",new mov_v()},
    {"in",new no_op()},
    {"out",new no_op()},
    {"jmple",new jmpl_v()},
    {"jmpre",new jmpr_v()},
    {"jmplre",new jmplr_v()},
    {"jmplg",new jmpl_v()},
    {"jmprg",new jmpr_v()},
    {"jmplrg",new jmplr_v()},
    {"jmpll",new jmpl_v()},
    {"jmprl",new jmpr_v()},
    {"jmplrl",new jmplr_v()},
    {"jmplge",new jmpl_v()},
    {"jmprge",new jmpr_v()},
    {"jmplrge",new jmplr_v()},
    {"jmplle",new jmpl_v()},
    {"jmprle",new jmpr_v()},
    {"jmplrle",new jmplr_v()},
    {"float",new float_data_v()},
    {"fld",new fld_v()},
    {"fdup",new no_op()}
};
